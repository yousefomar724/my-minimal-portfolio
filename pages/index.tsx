import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import {
  Profile,
  FavIcon,
  Footer,
  Projects,
  Skills,
  Posts,
  TopbarWithNoSSR,
} from '../components'
import { getHomePosts } from '../services'
import { Post, Project } from '../types'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import { useTranslation } from 'next-i18next'
import { motion } from 'framer-motion'
import { useState } from 'react'
import { useRouter } from 'next/router'

export const getStaticProps: GetStaticProps = async ({ locale }) => {
  const { posts, projects } = (await getHomePosts()) || []
  return {
    props: {
      posts,
      projects,
      ...(await serverSideTranslations(locale!, ['home', 'common'])),
      locale,
    },
    revalidate: 1,
  }
}

interface HomeProps {
  posts: Post[]
  projects: Project[]
  locale: string | undefined
}
const Home: NextPage<HomeProps> = (props) => {
  const { t } = useTranslation()
  const [value, setValue] = useState<number>(0)
  const router = useRouter()
  const tabs = [t('home:projects'), t('home:skills'), t('home:posts')]
  const sections = [Projects, Skills, Posts]
  return (
    <>
      <Head>
        <title>{t('common:my_name')}</title>
        <meta name='description' content='Generated by create next app' />
        <FavIcon />
      </Head>
      <header className='profile container'>
        <TopbarWithNoSSR />
        <Profile />
      </header>
      <main className='container' style={{ marginBottom: '4rem' }}>
        {/* Filter Tabs */}
        <motion.ul
          style={router.locale === 'ar' ? { direction: 'rtl' } : {}}
          className='filters__content'
          initial={{ y: 100, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{ delay: 1, duration: 0.5 }}
        >
          {tabs.map((tab, i: number) => {
            return (
              <button
                key={i}
                onClick={() => setValue(i)}
                className={`filters__button ${
                  value === i && 'filter-tab-active'
                }`}
              >
                {tab}
              </button>
            )
          })}
        </motion.ul>
        {/* Filter Sections */}
        <motion.div
          className='filters__sections'
          initial={{ y: 100, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{ delay: 1, duration: 0.5 }}
        >
          {sections?.map((SelectedSection, index) => (
            <div key={index}>
              {value === index && <SelectedSection data={props} />}
            </div>
          ))}
        </motion.div>
      </main>
      <Footer />
    </>
  )
}
export default Home
